@import term
@import mem
@import fs_fat12
@import bios_service
@import drv_serial
@import scheduler

@extern interrupt_init_protected_mode fun

copyEax raw<"=r"> -> u32
    mov $0, eax
;

getEbx raw<"=r"> -> u32
    mov $0, ebx
;

call raw<"m">: entryAdr u32
    call $0
;

@export start fun
    @bios_service.init(copyEax())
    @scheduler.init(getEbx())

    @mem.init()
    @term.init(@term.MODE_80x25)
    @term.printString("Initializing Bits Runner...\n", @term.FOREGROUND_GRAY)
    @drv_serial.init()

    interrupt_init_protected_mode()
    @fs_fat12.init()

    @term.printString("All ready, welcome to Bits Runner!\n", @term.FOREGROUND_GREEN)

    pShell ptr<u8> <- @fs_fat12.loadFile("SHELL.BIN")
    if pShell.vAdr = 0
        @term.printString("Could not load SHELL.BIN!", @term.FOREGROUND_RED)
    else
        pProcess ptr<blob<Process>> <- @scheduler.createProcess(pShell, 3_636)
        @scheduler.switchToProcess(pProcess)
    ;

    rep
    ;
;